- @title = 'Cross Tabs'

- content_for :body_class do
  myapnea-sky-bg

- content_for :header do
  .header-container
    .container
      %h1.page-heading
        = @title
        .header-link= link_to 'Admin Dashboard', admin_path

- referrals = ['ASAA', 'Internet', 'Other']

.dashboard-container
  %strong Sex
  %table.table.table-striped
    %col{ width: "250px" }
    %thead
      %tr
        %th Sex
        %th ASAA
        %th Internet
        %th Other
        %th Total
    %tbody
      - sexes = ["Male", "Female"]
      - sexes.each do |sex|
        %tr
          %td= sex
          - total_count = @user_values.select{ |key, h| h[:sex] == sex and h[:referral] }.count
          - referrals.each do |referral|
            - count = @user_values.select{ |key, h| h[:sex] == sex and h[:referral].include?(referral) }.count
            %td
              = count
              %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
          %td
            = total_count
      %tr
        %td Total
        - total_count = @user_values.select{ |key, h| h[:sex] and h[:referral] }.count
        - referrals.each do |referral|
          - count = @user_values.select{ |key, h| h[:sex] and h[:referral].include?(referral) }.count
          %td
            = count
            %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
        %td
          = total_count

-# Race table
.dashboard-container
  %strong Race
  %table.table.table-striped
    %col{ width: "250px" }
    %thead
      %tr
        %th Race
        %th ASAA
        %th Internet
        %th Other
        %th Total
    %tbody
      - races = ["White", "Black", "Other"]
      - races.each do |race|
        - total_count = @user_values.select{ |key, h| h[:race] and h[:race].include?(race) and h[:referral] }.count
        %tr
          %td= race
          - referrals.each do |referral|
            - count = @user_values.select{ |key, h| h[:race] and h[:race].include?(race) and h[:referral].include?(referral) }.count
            %td
              = count
              %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
          %td
            = total_count
      %tr
        %td Total
        - total_count = @user_values.select{ |key, h| h[:race] and h[:referral] }.count
        - referrals.each do |referral|
          - count = @user_values.select{ |key, h| h[:race] and h[:referral].include?(referral) }.count
          %td
            = count
            %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
        %td
          = total_count

-# Providing basics table
.dashboard-container
  %strong Difficulty Providing Basics
  %table.table.table-striped
    %col{ width: "250px" }
    %thead
      %tr
        %th Difficulty
        %th ASAA
        %th Internet
        %th Other
        %th Total
    %tbody
      - wealth_levels = ["Not very hard", "All other options"]
      - wealth_levels.each do |wealth_level|
        - total_count = @user_values.select{ |key, h| h[:wealth] == wealth_level and h[:referral] }.count
        %tr
          %td= wealth_level
          - referrals.each do |referral|
            - count = @user_values.select{ |key, h| h[:wealth] == wealth_level and h[:referral].include?(referral) }.count
            %td
              = count
              %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
          %td
            = total_count
      %tr
        %td Total
        - total_count = @user_values.select{ |key, h| h[:wealth] and h[:referral] }.count
        - referrals.each do |referral|
          - count = @user_values.select{ |key, h| h[:wealth] and h[:referral].include?(referral) }.count
          %td
            = count
            %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
        %td
          = total_count

-# Education table
.dashboard-container
  %strong Education
  %table.table.table-striped.table-fixed
    %col{ width: '250px' }
    %thead
      %tr
        %th Education
        %th ASAA
        %th Internet
        %th Other
        %th Total
    %tbody
      - education_levels = ["High school or less", "Some college", "4-year college graduate", "More than 4-year college"]
      - education_levels.each do |education_level|
        - total_count = @user_values.select{ |key, h| h[:education] == education_level and h[:referral] }.count
        %tr
          %td= education_level
          - referrals.each do |referral|
            - count = @user_values.select{ |key, h| h[:education] == education_level and h[:referral].include?(referral) }.count
            %td
              = count
              %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
          %td
            = total_count
      %tr
        %td Total
        - total_count = @user_values.select{ |key, h| h[:education] and h[:referral] }.count
        - referrals.each do |referral|
          - count = @user_values.select{ |key, h| h[:education] and h[:referral].include?(referral) }.count
          %td
            = count
            %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
        %td
          = total_count

-# Age table
.dashboard-container
  %strong Age
  %table.table.table-striped.table-fixed
    %col{ width: '250px' }
    %thead
      %tr
        %th Age
        %th ASAA
        %th Internet
        %th Other
        %th Total
    %tbody
      - @age_ranges.each do |age_display, age_range|
        - total_count = @user_values.select{ |key, h| h[:age] == age_display and h[:referral] }.count
        %tr
          %td= age_display
          - referrals.each do |referral|
            - count = @user_values.select{ |key, h| h[:age] == age_display and h[:referral].include?(referral) }.count
            %td
              = count
              %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
          %td
            = total_count
      %tr
        %td Total
        - total_count = @user_values.select{ |key, h| h[:age] and h[:referral] }.count
        - referrals.each do |referral|
          - count = @user_values.select{ |key, h| h[:age] and h[:referral].include?(referral) }.count
          %td
            = count
            %span.text-muted= '(' + ("%0.1f%" % (count.to_f*100/total_count.to_f)) + ')'
        %td
          = total_count
