- @title = 'Version Stats'
.content-main-header
  %h1
    = @title
  %p.lead.text-light8{ style: 'margin-bottom: 0px;'}
    = link_to 'Admin Dashboard', admin_path

.content-container
  .content-header
    %h3 Version Statistics
  .content-body
    %table.table.table-striped
      %thead
        %tr
          %th
            Version
          %th
            Release Date
          %th
            New Users
          %th
            Consent *
          %th
            Completing Surveys *
          %th
            Avg # Complete *
      %tbody
        - @version_dates.each do |v|
          - release_users = User.current
          - release_users = release_users.where( "created_at >= ?", v[:release_date].at_noon ) if v[:release_date]
          - release_users = release_users.where( "created_at < ?", v[:next_release_date].at_noon ) if v[:next_release_date]
          %tr
            %td
              = v[:version]
            %td
              = v[:release_date].strftime("%m/%d/%Y") if v[:release_date]
            %td
              - number_new_users = release_users.count
              = number_new_users
            %td
              - diagnosed_adults = release_users.where(adult_diagnosed: true)
              - number_diagnosed_adults = diagnosed_adults.count
              - number_consented = diagnosed_adults.where.not(accepted_consent_at: nil)
              = number_consented.count
              %span.text-muted
                = '(' + (number_consented.count * 100 / number_diagnosed_adults).to_s + '%)' rescue '(0%)'
            %td
              - user_ids_with_completed_surveys = AnswerSession.current.where( encounter: 'baseline', locked: true ).pluck(:user_id).uniq
              - number_users_with_completed_surveys = number_consented.where(id: user_ids_with_completed_surveys)
              = number_users_with_completed_surveys.count
              %span.text-muted
                = '(' + (number_users_with_completed_surveys.count * 100 / number_diagnosed_adults).to_s + '%)' rescue '(0%)'
            %td
              - number_complete_surveys = AnswerSession.current.where( encounter: 'baseline', locked: true, user_id: number_users_with_completed_surveys.pluck(:id) ).count

              - if number_users_with_completed_surveys.count == 0
                0
              - else
                = "%0.2f" % (number_complete_surveys.to_f / number_users_with_completed_surveys.count)
    %p.muted
      * Calculation based on number of adult diagnosed patients (see table below)

.content-container
  .content-header
    %h3 Member Statistics
  .content-body
    %table.table.table-striped
      %thead
        %tr
          %th
            Version
          %th
            Release Date
          %th
            New Users
          %th
            Adult Diagnosed
          %th
            Adult At-Risk
          %th
            Caregiver Adult
          %th
            Caregiven Child(ren)
          %th
            Provider
          %th
            Researcher
      %tbody
        - @version_dates.each do |v|
          - release_users = User.current
          - release_users = release_users.where( "created_at >= ?", v[:release_date].at_noon ) if v[:release_date]
          - release_users = release_users.where( "created_at < ?", v[:next_release_date].at_noon ) if v[:next_release_date]
          %tr
            %td
              = v[:version]
            %td
              = v[:release_date].strftime("%m/%d/%Y") if v[:release_date]
            %td
              - number_new_users = release_users.count
              = number_new_users
            %td
              = release_users.where(adult_diagnosed: true).count
            %td
              = release_users.where(adult_at_risk: true).count
            %td
              = release_users.where(caregiver_adult: true).count
            %td
              = release_users.where(caregiver_child: true).count
            %td
              = release_users.where(provider: true).count
            %td
              = release_users.where(researcher: true).count
