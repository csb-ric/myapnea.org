- @title = 'Progress Report'
.content-main-header2
  %h1
    = link_to 'Admin Dashboard', admin_path
    &middot;
    = @title

- user_scope = User.where(include_in_exports: true)
- @survey = Survey.current.find_by_slug 'about-me'
- @encounter = Encounter.current.find_by_slug 'baseline'

.content-container
  %h3 Number of members by category
  %table.table.table-bordered.table-condensed{ style: 'table-layout:fixed' }
    %thead
      %tr
        - User::TYPES.each do |name, type|
          %th= name
        %th Total
        %th No Role Selected
    %tbody
      %tr
        - total_count = 0
        - User::TYPES.each do |name, type|
          - count = user_scope.where(type.to_sym => true).count
          - total_count += count
          %td= number_with_delimiter count
        %td= number_with_delimiter user_scope.where("adult_diagnosed = ? or adult_at_risk = ? or caregiver_adult = ? or caregiver_child = ? or provider = ? or researcher = ?", true, true, true, true, true, true).count
        %td= number_with_delimiter user_scope.where("adult_diagnosed = ? and adult_at_risk = ? and caregiver_adult = ? and caregiver_child = ? and provider = ? and researcher = ?", false, false, false, false, false, false).count
  = link_to 'More Breakdown by Category', admin_reports_timeline_path

.content-container
  %h3 Signed consents
  %p.lead.centered
    - signed_consent_count = user_scope.where.not(accepted_consent_at: nil).count
    - not_signed_consent_count = user_scope.where(accepted_consent_at: nil).count
    = number_with_delimiter signed_consent_count
    - if false
      Signed Consent
      %br
      = number_with_delimiter not_signed_consent_count

.content-container
  %h3 With any questionnaire data
  %p.lead.centered
    - with_questionnaire_count = AnswerValue.joins(answer: :answer_session).where(answers: { state: 'locked' }).distinct.select("answer_sessions.user_id").count
    = number_with_delimiter with_questionnaire_count

.content-container
  %h3 Demographics on signed consents
  - question = @survey.questions.find_by_slug 'sex'
  - answer_template = question.first_radio_or_checkbox_answer_template if question
  - answer_option_counts = TemporaryReport.answer_option_counts(@survey, question, answer_template, encounter: @encounter, range: 1..2)

  %table.table.table-bordered.table-condensed{ style: 'table-layout:fixed' }
    %thead
      %tr
        %th Male
        %th Female
    %tbody
      %tr
        %td
          - report_item = ReportItem.new(answer_option_counts, answer_template, 1)
          = number_with_delimiter report_item.count
        %td
          - report_item = ReportItem.new(answer_option_counts, answer_template, 2)
          = number_with_delimiter report_item.count

  - question = @survey.questions.find_by_slug 'race'
  - answer_template = question.first_radio_or_checkbox_answer_template if question
  - answer_option_counts = TemporaryReport.answer_option_counts(@survey, question, answer_template, encounter: @encounter, range: [3,5])

  %table.table.table-bordered.table-condensed{ style: 'table-layout:fixed' }
    %thead
      %tr
        %th White
        %th Black
    %tbody
      %tr
        %td
          - report_item = ReportItem.new(answer_option_counts, answer_template, 5)
          = number_with_delimiter report_item.count
        %td
          - report_item = ReportItem.new(answer_option_counts, answer_template, 3)
          = number_with_delimiter report_item.count


  - question = @survey.questions.find_by_slug 'date-of-birth'
  - date_array = question.community_answer_text_values(@encounter).pluck(:text_value).collect{|d| (Date.strptime(d, "%m/%d/%Y") rescue nil)}.compact

  %table.table.table-bordered.table-condensed{ style: 'table-layout:fixed' }
    %thead
      %tr
        %th 18-34
        %th 35-49
        %th 50-64
        %th 65-75
        %th 76+
    %tbody
      %tr
        %td= number_with_delimiter date_array.select{|d| ((Date.today - 34.years)..(Date.today - 18.years)).cover?(d)}.count
        %td= number_with_delimiter date_array.select{|d| ((Date.today - 49.years)..(Date.today - 35.years)).cover?(d)}.count
        %td= number_with_delimiter date_array.select{|d| ((Date.today - 64.years)..(Date.today - 50.years)).cover?(d)}.count
        %td= number_with_delimiter date_array.select{|d| ((Date.today - 75.years)..(Date.today - 65.years)).cover?(d)}.count
        %td= number_with_delimiter date_array.select{|d| d < (Date.today - 75.years)}.count

.content-container
  %h3 Number voting on rank research and number of items
  - research_topic_count = ResearchTopic.where.not(topic_id: nil).count
  - vote_scope = Vote.current
  - vote_count = vote_scope.count
  - voters_count = vote_scope.distinct.select(:user_id).count

  %table.table.table-bordered.table-condensed{ style: 'table-layout:fixed' }
    %thead
      %tr
        %th Research Topics
        %th Votes
        %th Unique Voters
    %tbody
      %tr
        %td= number_with_delimiter research_topic_count
        %td= number_with_delimiter vote_count
        %td= number_with_delimiter voters_count

.content-container
  %h3 Number of posts topics and unique individuals posting
  - post_scope = Post.current.visible_for_user.not_research
  - post_count = post_scope.count
  - posting_user_count = post_scope.distinct.select(:user_id).count
  - topic_count = Topic.current.where(status: ['pending_review', 'approved']).not_research.count
  %table.table.table-bordered.table-condensed{ style: 'table-layout:fixed' }
    %thead
      %tr
        %th Posts
        %th Topics
        %th Unique Active Posters
    %tbody
      %tr
        %td= number_with_delimiter post_count
        %td= number_with_delimiter topic_count
        %td= number_with_delimiter posting_user_count

.content-container
  %h3 Number of withdrawn consent
  %p.lead.centered
    - withdrawn_consent_count = AnswerValue.joins(answer: :answer_session).where(answers: { state: 'locked' }).where(answer_sessions: { user_id: user_scope.where(accepted_consent_at: nil).select(:id) }).distinct.select("answer_sessions.user_id").count
    = number_with_delimiter withdrawn_consent_count
