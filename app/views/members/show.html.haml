.content-main-header
  %h1
    = render 'forums/user_image', user: @member, size: 100
    = @member.forum_name

-# Admin information
- if current_user and current_user.has_role? :moderator
  .well
    %h4.f300
      Moderator Contact Information
    %br
    %dl.dl-horizontal
      %dt
        %strong Member Name
      %dd
        = @member.name
      %dt
        %strong Member Email
      %dd
        = @member.email

-# About member
.content-container
  .content-body
    .row
      .col-sm-3
      .col-sm-3
        %p.text-dark8
          %span.f500.text-dark5 Member since:
          %br
          = @member.created_at.strftime("%b %-d, %Y")
      .col-sm-3
        %p.text-dark8
          %span.f500.text-dark5 Number of posts:
          %br
          = @posts.count
      .col-sm-3
        %p.text-dark8
          %span.f500.text-dark5 Number of votes:
          %br
          = @member.votes.current.count

-# Recent posts
.horizontal-inset
  - @events.each do |event|
    - if event.class == Post
      .recent-post-container
        .poster-image
          = render 'forums/user_image_link', user: @member, size: 50
        .post
          .post-header
            %h5.f300.poster-details
              %span.f500= link_to @member.forum_name, member_path(@member.forum_name), class: 'no-underline darkerer-blue'
              replied to
              %br.visible-xs
              = link_to event.topic.name, forum_topic_path(event.topic.forum.slug, event.topic.slug), class: 'no-underline'
            %p.small.post-time
              = event.created_at.strftime("%-d %B %Y, %-l:%M %p")
          .post-content
            - if event.description.length > 800
              = simple_markdown(truncate(event.description, length: 800))
              .text-right= link_to '...read more', forum_topic_post_path(event.topic.forum.slug, event.topic.slug, event), class: 'no-underline'
            - else
              = simple_markdown(event.description)
          - if current_user
            .reply-container
              - unless event.topic.locked?
                - new_post = event.topic.posts.new
                = form_for [event.topic.forum, event.topic, new_post], html: { class: 'form-horizontal' } do |f|

                  - if current_user.has_role? :moderator
                    = f.hidden_field :status, value: 'approved'

                  .reply
                    .reply-user
                      = image_tag current_user.photo_url, class: 'reply-user-image'
                    .reply-field
                      = f.text_area :description, rows: 1, style: 'resize: none;', class: 'reply-text-area', id: 'post_description_new', data: { object: 'text-area-autocomplete', mentions: SocialProfile.current.where.not(name: [nil, '']).pluck(:name).uniq.sort }
                    .reply-submit
                      = f.submit "Reply", class: 'btn btn-primary reply-button', data: { disable_with: "Posting" }
    - elsif event.class == ResearchTopic and current_user
      %div{ style: 'width: 80%; margin: auto'}
        = render 'research_topics/voting_form', research_topic: event
