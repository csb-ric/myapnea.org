-# Must be provided a question object: question
= form_tag(process_answer_path, {role: "form", class: 'survey-container progress-w-enter progress-w-hotkey', data: { object: "#{'question-container-'+question_number.to_s}" } }) do
  = hidden_field_tag "question_id[]", question.id
  = hidden_field_tag "answer_session_id", answer_session.id

  .panel
    .question-container
      %h3.f300= question.text
    .input-container
      - answer_template = question.answer_templates.first
      - secondary_templates = question.answer_templates[1..-1] if question.answer_templates.length > 1
      -# = answer.complete? or answer.incomplete?

      - answer_template.answer_options.distinct.each do |answer_option|
        - targeted_template = secondary_templates.select{|t| t.target_answer_option == answer_option.new_value }.first if secondary_templates.present?
        %div{ class: answer_option.display_class }
          = radio_button_tag "#{question.id}[#{answer_template.id}]", answer_option.id, have_checked?(answer, answer_template, answer_option.id), id: "question_#{question.id}_#{answer_template.id}_#{answer_option.new_value}", data: { hotkey: answer_option.hotkey }, class: ("reveal-next-input" if targeted_template.present? )
          %label{ for: "question_#{question.id}_#{answer_template.id}_#{answer_option.new_value}" }
            %p= answer_option.text
            %span.hotkey= answer_option.hotkey
          = render partial: "surveys/question_templates/secondary_input", locals: { targeted_template: targeted_template, answer_option: answer_option, question: question, answer: answer }
