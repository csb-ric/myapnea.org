- current_index = post_counter + 1
%a{ name: "post-#{post.id}" }
%a{ name: "c#{current_index}" }

.row
  - if post.user.is_a?(Forem::NilUser)
    .col-xs-1
    .col-md-11.col-xs-10.col-xs-offset-1.col-md-offset-0
      .post-container.post-deleted
        .post-container-right-middle-after
          = "##{current_index}"
        %i.text-muted
          Post Deleted
  - elsif post.spam? and forem_admin_or_moderator?(post.topic.forum)
    .col-xs-1
      = render partial: 'forem/forums/user_image', locals: { user: post.user, size: 50 }
    .col-md-11.col-xs-10.col-xs-offset-1.col-md-offset-0
      .post-container.post-spam
        .post-container-right-after
          Marked as Spam
          - if forem_admin_or_moderator?(post.topic.forum) and false
            = link_to forem.forum_topic_post_path(post.forum, post.topic, post, post: { state: 'pending_review' }), method: :patch, class: 'btn btn-xs btn-default' do
              %i.fa.fa-undo
              Undo
          = "##{current_index}"
        - if post.topic.user == post.user
          .post-container-right-bottom-after.original-poster-badge
            Original Poster
        %div{ id: "post_#{post.id}_container" }
          .post-user-name-container
            = post.user.forem_name
          %p{ style: 'font-style:italic' }
            %i.fa.fa-eye-slash
            Post Is Hidden
          .text-muted{ style: 'text-decoration:line-through' }
            = forem_emojify(simple_markdown(post.text, false))
          .small.text-muted{ style: 'font-weight: 300' }
            = post.created_at.strftime("%-d %B %Y, %-l:%M %p")
  - elsif post.pending_review?
    - if current_user == post.user or forem_admin_or_moderator?(post.topic.forum)
      .col-xs-1
        = render partial: 'forem/forums/user_image', locals: { user: post.user, size: 50 }
      .col-md-11.col-xs-10.col-xs-offset-1.col-md-offset-0
        .post-container.post-under-review
          .post-container-right-after
            Under Review
            - if forem_admin_or_moderator?(post.topic.forum)
              = link_to forem.forum_moderate_posts_path(post.forum, posts: { post.id.to_s.to_sym => { moderation_option: 'approve' } } ), method: :put, class: 'btn btn-xs btn-success' do
                %i.fa.fa-thumbs-up
                Approve
              = link_to forem.forum_moderate_posts_path(post.forum, posts: { post.id.to_s.to_sym => { moderation_option: 'spam' } }), data: { confirm: t("are_you_sure") }, method: :put, class: 'btn btn-xs btn-danger' do
                %i.fa.fa-thumbs-down
                Mark As Spam
            = "##{current_index}"
          - if post.topic.user == post.user
            .post-container-right-bottom-after.original-poster-badge
              Original Poster
          %div{ id: "post_#{post.id}_container" }
            .post-user-name-container
              = post.user.forem_name
            %p{ style: 'font-style:italic' }
              %i.fa.fa-eye
              = 'Your' if current_user == post.user
              Post Is Under Review
            = forem_emojify(simple_markdown(post.text, post.user.can_post_links?))
            .small.text-muted{ style: 'font-weight: 300' }
              = post.created_at.strftime("%-d %B %Y, %-l:%M %p")
  - else
    .col-xs-1
      = render partial: 'forem/forums/user_image', locals: { user: post.user, size: 50 }

    .col-md-11.col-xs-10.col-xs-offset-1.col-md-offset-0
      .post-container
        .post-container-right-after
          - if (forem_user and post.owner_or_admin?(forem_user))
            - if can?(:edit_post, post.topic.forum)
              = link_to forem.edit_forum_topic_post_path(post.forum, post.topic, post), data: { toggle: 'tooltip', container: 'body' }, title: 'Edit Post', class: 'btn btn-xs btn-default' do
                %i.fa.fa-pencil
            - if can?(:destroy_post, post.topic.forum)
              = link_to forem.forum_topic_post_path(post.forum, post.topic, post), method: :delete, data: { confirm: t("are_you_sure"), toggle: 'tooltip', container: 'body' }, class: 'btn btn-xs btn-danger', title: t('delete', scope: 'forem.topic') do
                %i.fa.fa-trash
          %a{ href: "#c#{current_index}" }
            = "##{current_index}"
        - if post.topic.user == post.user
          .post-container-right-bottom-after.original-poster-badge
            Original Poster
        %div{ id: "post_#{post.id}_container" }
          .post-user-name-container
            = post.user.forem_name
          = forem_emojify(simple_markdown(post.text, post.user.can_post_links?))
          .small.text-muted{ style: 'font-weight: 300' }
            = post.created_at.strftime("%-d %B %Y, %-l:%M %p")


- if false
  %a{:name => "post-#{post.id}"}
  .well{class: ('original-post' if (post.topic.posts.first == post))}
    .post{:id => "post_#{post_counter + 1}"}
      - if post.pending_review?
        .alert.alert-info.alert-dismissible{:role => "alert"}
          %button.close{"data-dismiss" => "alert", :type => "button"}
            %span{"aria-hidden" => "true"} &times;
            %span.sr-only Close
          = t(".pending_review")
          - if forem_admin_or_moderator?(post.topic.forum)
            - if local_assigns[:mass_moderation]
              = render "/forem/posts/moderation_tools", :post => post
            - else
              = form_tag forem.forum_moderate_posts_path(post.topic.forum), :method => :put do
                = render "/forem/posts/moderation_tools", :post => post
      .contents.row
        .user.col-md-1.col-sm-2
          - if post.user.is_a?(Forem::NilUser)
            = image_tag 'default-user.jpg', class: "img-responsive img-thumbnail"
          - else
            = image_tag post.user.photo_url, class: "img-responsive img-thumbnail"
        .contents.col-md-11.col-sm-10
          .row
            .col-md-11.col-sm-10
              .post-heading
                %small
                  %strong
                    - if post.user.is_a?(Forem::NilUser)
                      = t(:deleted)
                    - else
                      %span.post-user
                        - if post.topic.user == post.user
                          .fa.fa-star{data: {toggle: "tooltip", placement: "top", container: 'body', title: "Original Poster"}}
                        %span= post.user.forem_name
                  %span
                    posted
                    %a{:href => "#post-#{post.id}"}
                      = post_time_tag(post)
                    - if post.reply_to
                      %span.in-reply-to
                        = link_to "in reply to #{post.reply_to.user.forem_name}", "#post-#{post.reply_to.id}"
            .col-md-1.col-sm-2
              .btn-group.btn-group-xs
                %button.btn.btn-primary.dropdown-toggle{type: "button", data: {toggle: "dropdown"}}
                  .fa.fa-cog
                  .fa.fa-caret-down
                %ul.dropdown-menu.pull-right{role: "menu"}
                  %li= link_to t('reply', :scope => 'forem.topic'), forem.new_forum_topic_post_path(post.forum, post.topic, :reply_to_id => post.id), :class => ""
                  %li= link_to t('quote', :scope => 'forem.topic'), forem.new_forum_topic_post_path(post.forum, post.topic, :reply_to_id => post.id, :quote => true), :class => "text-success"
                  - if forem_user and post.owner_or_admin?(forem_user)
                    - if can?(:edit_post, post.topic.forum)
                      %li= link_to "Edit", forem.edit_forum_topic_post_path(post.forum, post.topic, post), :class => "text-info"
                    - if can?(:destroy_post, post.topic.forum)
                      %li= link_to t('delete', :scope => 'forem.topic'), forem.forum_topic_post_path(post.forum, post.topic, post), :method => :delete, data: { :confirm => t("are_you_sure") }, :class => "text-danger"

          .post-content
            - if post.user.is_a?(Forem::NilUser)
              %span.text-muted= t(:deleted)
            - else
              = forem_format(post.text)
          %p
